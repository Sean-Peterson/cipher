<?php
function cipher_menu() {
    $items['cipher'] = array(
        'title' => 'Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('encryption_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher/result'] = array(
        'title' => "Can you decipher the code?",
        'page callback' => 'cipher_result',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function encryption_form(){
    $form['shift']=array(
        '#title'=>'A number, please',
        '#type'=>'textfield',
        '#description'=>t('This number will be used to encrypt your word'),
        '#required'=>TRUE,
        '#element_validate'=>array(
            'element_validate_interger_positive',
        ),
    );
    $form['direction']=array(
        '#title'=>'Specify LEFT or RIGHT, please',
        '#type'=>'textfield',
        '#description'=>t('The direction will be used to encrypt your word'),
        '#required'=>TRUE,
        '#element_validate'=>array(
            'element_validate_direction',
        ),
    );
    $form['word']=array(
        '#title'=>'Input a word for encryption',
        '#type'=>'textfield',
        '#description'=>t('This word will be encrypted with the information you provided'),
        '#required'=>TRUE,
    );
    $form['submit']=array(
        '#type'=>'submit',
        '#value'=>'Submit',
    );
    return $form;
}

function element_validate_direction($element) {
    if(strtolower($element['#value']) !== 'left' && strtolower($element['#value']) !== 'right'){
        form_error($element, t('Please specify either left or right'));
    }
}

function element_validate_interger_positive($element) {
    if($element['#value']<1){
        form_error($element, t('Please enter a positive interger'));
    }
}

function encryption_form_submit($form, &$form_state){
    $shift = $form_state['values']['shift'];
    $direction = strtolower($form_state['values']['direction']);
    $word = strtolower($form_state['values']['word']);
    $split = str_split($word,1);
    $letters = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w', 'x','y','z');
    $symbols = array('.',',',' ','!',';',':');
    $shift_number = intval($shift);
    while($shift_number>26) {
            $shift_number = $shift_number - 26;
    }
    // if ($direction =='right') {
    //     for($t=0;$t<count($split)-1;$t++){
    //         for($k=0;$k<count($letters)-1;$k++){
    //             if($split[$t]==$letters[$k]){
    //                 if ($k+$shift_number>25) {
    //                     $new_number=$k+$shift_number-26;
    //                     $split[$t] = $letters[$new_number];
    //                 }else{
    //                     $split[$t] = $letters[$k+$shift_number];
    //                 }
    //             }
    //         }
    //     }
    // }
        for($i=0;$i<count($split);$i++){
            for($j=0;$j<count($letters)-1;$j++){
                if($split[$i]==$letters[$j]){
                    $spot=$j;
                    if($direction=='left'){
                        if ($j<$shift_number) {

                            $_SESSION['count']=count($letters);
                            $_SESSION['split_count']=count($split);
                            $_SESSION['j']=$j;
                            $_SESSION['shift']=$shift;
                            $_SESSION['direction']=$direction;
                            $_SESSION['word']=$word;
                            $_SESSION['split']=$split;

                            $new_number=$j-$shift_number+26;
                            $split[$i] = $letters[$new_number];
                        }else{

                            $_SESSION['count']=count($letters);
                            $_SESSION['split_count']=count($split);
                            $_SESSION['j']=$j;
                            $_SESSION['shift']=$shift;
                            $_SESSION['direction']=$direction;
                            $_SESSION['word']=$word;
                            $_SESSION['split']=$split;

                            $split[$i] = $letters[$j-$shift_number];
                        }
                    }else if($direction=='right'){
                        if (($j+$shift_number)>25) {

                            $_SESSION['split_count']=count($split);
                            $_SESSION['count']=count($letters);
                            $_SESSION['j']=$spot;
                            $_SESSION['shift']=$shift;
                            $_SESSION['direction']=$direction;
                            $_SESSION['word']=$word;
                            $_SESSION['split']=str_split($word);

                            $newer_number=$j+$shift_number-26;
                            $split[$i] = $letters[$newer_number];
                        }else{

                            $_SESSION['count']=count($letters);
                            $_SESSION['split_count']=count($split);
                            $_SESSION['j']=$spot;
                            $_SESSION['shift']=$shift;
                            $_SESSION['direction']=$direction;
                            $_SESSION['word']=$word;
                            $_SESSION['split']=$split;

                            $split[$i] = $letters[$j+$shift_number];
                        }
                    }
                }
            }
        }

    // $output=array();
    // if ($direction == 'left') {
    //     foreach ($split as $letter) {
    //         for($i=0;$i<count($letters)-1;$i++){
    //             if($letter==$letters[$i]){
    //                 if ($i<$shift_number) {
    //                     $new_number=$i-$shift_number+26;
    //                     array_push($output,$letters[$new_number]);
    //                 }else{
    //                     array_push($output,$letters[$i-$shift_number]);
    //                 }
    //             }else{
    //                 array_push($output, $letter);
    //             }
    //         }
    //         // array_push($output, $letter)
    //     }
    // }else{
    //     foreach ($split as $letter) {
    //         for($i=0;$i<count($letters)-1;$i++){
    //             if($letter==$letters[$i]){
    //                 if ($i+$shift_number>25) {
    //                     $new_number=$i+$shift_number-26;
    //                     array_push($output,$letters[$new_number]);
    //                 }else{
    //                     array_push($output,$letters[$i-$shift_number]);
    //                 }
    //             }
    //         }
    //     }
    // }

    $_SESSION['values']=[$split];
    $form_state['redirect'] = 'cipher/result';
    }
// . $noomber.$_SESSION['j'].$_SESSION['j']
    function cipher_result() {
    $show = '<h1>'. 'next j ' . $_SESSION['j']. ' next word ' . $_SESSION['word']. ' next split ' . $_SESSION['split'][0]. ' next direction ' . $_SESSION['direction']. ' next shift ' . $_SESSION['shift'].' next count of alphabet '. $_SESSION['count'].' '.' next count of split '. $_SESSION['split_count'].' ' ;
foreach($_SESSION['values'] as $value){
        foreach ($value as $letter) {
            $show .= $letter;
        }
    }
    $show .= '</h1>';
    return $show;
    }

    // $letters_left = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w', 'x','y','z');
    // $letters_right = array('z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a');
    // if($shift_number>26){
    //     while($shift_number>25){
    //         $shift_number = $shift_number - 26;
    //     }
    // }
    // if ($direction == 'left') {
    //     $shift_number = -1 * $shift_number;
    //     for($i=0;$i<count($split);$i++){
    //         for($j=0;$j<count($letters_left)-1;$j++){
    //             if($split[$i] == $letters_left[$j]){
    //                 if($j <= abs($shift_number)){
    //                     $new_number = count($letters_left)+$shift_number;
    //                     $split[$i] = $letters_left[$new_number];
    //                 }else{
    //                     $split[$i] = $letters_left[$j+$shift_number];
    //                 }
    //             }
    //         }
    //     }
    // }else if ($direction == 'right') {
    //     $shift_number = -1 * $shift_number;
    //     for($i=0;$i<count($split);$i++){
    //         for($j=0;$j<count($letters_right)-1;$j++){
    //             if($split[$i] == $letters_right[$j]){
    //                 if($j<abs($shift_number)){
    //                     $new_number = $j + $shift_number;
    //                     $split[$i] = '$letters_right[26+$new_number]';
    //                 }else{
    //                     $split[$i] = '$letters_right[$j+$shift_number]';
    //                 }
    //             }
    //         }
    //     }
    // }


//     $_SESSION['values']=[$split];
//     $form_state['redirect'] = 'cipher/result';
// }
//
// function cipher_result() {
//     $show = '<h1>';
//     foreach($_SESSION['values'] as $value){
//         foreach ($value as $letter) {
//             $show .= $letter;
//         }
//     }
//     $show .= '</h1>';
//     return $show;
// }
    // if ($direction == 'right') {
    //     for($i=0;$i<count($split);$i++){
    //         for($j=0;$j<count($letters_left)-1;$j++){
    //             if ($split[$i]===$letters_left[$j]) {
    //                 $split[$i] = $letters_left[$j+$shift_number];
    //             }
    //         }
    //     }
    // }
// .$_SESSION['values'][0][25]

// if ($direction == 'left') {
//     $shift_number = -1 * $shift_number;
//     for($i=0;$i<count($split);$i++){
//         for($j=0;$j<count($letters_left);$j++){
//             if($split[$i] == $letters_left[$j]){
//                 if($j<abs($shift_number)){
//                     $new_number = $j + $shift_number;
//                     $split[$i] = $letters_left[26+$new_number];
//                 }else{
//                 $split[$i] = $letters_left[$j+$shift_number];
//                 }
//             }
//         }
//     }
// }
